# Copyright 2025 Samuel "Lord-Windy" Brown
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Find Module Template for Ptah-managed libraries
# This template generates Find@PACKAGE_NAME@.cmake modules

#[=======================================================================[.rst:
Find@PACKAGE_NAME@
-----------------

Finds the @PACKAGE_NAME@ library.

Generated by Ptah Library Manager.

Imported Targets
^^^^^^^^^^^^^^^^

This module provides the following imported targets, if found:

``@PACKAGE_NAMESPACE@::@PACKAGE_NAME@``
  The @PACKAGE_NAME@ library

Result Variables
^^^^^^^^^^^^^^^^

This will define the following variables:

``@PACKAGE_NAME@_FOUND``
  True if the system has the @PACKAGE_NAME@ library.
``@PACKAGE_NAME@_VERSION``
  The version of the @PACKAGE_NAME@ library which was found.
``@PACKAGE_NAME@_INCLUDE_DIRS``
  Include directories needed to use @PACKAGE_NAME@.
``@PACKAGE_NAME@_LIBRARIES``
  Libraries needed to link to @PACKAGE_NAME@.

Cache Variables
^^^^^^^^^^^^^^^

The following cache variables may also be set:

``@PACKAGE_NAME@_INCLUDE_DIR``
  The directory containing ``@PACKAGE_MAIN_HEADER@``.
``@PACKAGE_NAME@_LIBRARY``
  The path to the @PACKAGE_NAME@ library.

#]=======================================================================]

# Find include directory
find_path(@PACKAGE_NAME@_INCLUDE_DIR
    NAMES @PACKAGE_MAIN_HEADER@
    PATHS @PACKAGE_SEARCH_PATHS@
    PATH_SUFFIXES include
)

# Find library
find_library(@PACKAGE_NAME@_LIBRARY
    NAMES @PACKAGE_LIBRARY_NAMES@
    PATHS @PACKAGE_SEARCH_PATHS@
    PATH_SUFFIXES lib lib64
)

# Handle version
if(@PACKAGE_NAME@_INCLUDE_DIR AND EXISTS "${@PACKAGE_NAME@_INCLUDE_DIR}/@PACKAGE_VERSION_HEADER@")
    file(STRINGS "${@PACKAGE_NAME@_INCLUDE_DIR}/@PACKAGE_VERSION_HEADER@" @PACKAGE_NAME@_VERSION_LINE
        REGEX "^#define[ \t]+@PACKAGE_VERSION_DEFINE@[ \t]+")
    
    if(@PACKAGE_NAME@_VERSION_LINE)
        string(REGEX REPLACE "^#define[ \t]+@PACKAGE_VERSION_DEFINE@[ \t]+([0-9]+).*" "\\1"
            @PACKAGE_NAME@_VERSION_MAJOR "${@PACKAGE_NAME@_VERSION_LINE}")
        # Additional version parsing logic would go here
        set(@PACKAGE_NAME@_VERSION "${@PACKAGE_NAME@_VERSION_MAJOR}")
    endif()
endif()

# Use find_package_handle_standard_args to handle the REQUIRED argument
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(@PACKAGE_NAME@
    FOUND_VAR @PACKAGE_NAME@_FOUND
    REQUIRED_VARS
        @PACKAGE_NAME@_LIBRARY
        @PACKAGE_NAME@_INCLUDE_DIR
    VERSION_VAR @PACKAGE_NAME@_VERSION
)

# Set the output variables
if(@PACKAGE_NAME@_FOUND)
    set(@PACKAGE_NAME@_LIBRARIES ${@PACKAGE_NAME@_LIBRARY})
    set(@PACKAGE_NAME@_INCLUDE_DIRS ${@PACKAGE_NAME@_INCLUDE_DIR})
    
    # Create imported target if it doesn't exist
    if(NOT TARGET @PACKAGE_NAMESPACE@::@PACKAGE_NAME@)
        add_library(@PACKAGE_NAMESPACE@::@PACKAGE_NAME@ @PACKAGE_LIBRARY_TYPE@ IMPORTED)
        set_target_properties(@PACKAGE_NAMESPACE@::@PACKAGE_NAME@ PROPERTIES
            IMPORTED_LOCATION "${@PACKAGE_NAME@_LIBRARY}"
            INTERFACE_INCLUDE_DIRECTORIES "${@PACKAGE_NAME@_INCLUDE_DIR}"
        )
    endif()
endif()

# Mark cache variables as advanced
mark_as_advanced(
    @PACKAGE_NAME@_INCLUDE_DIR
    @PACKAGE_NAME@_LIBRARY
)